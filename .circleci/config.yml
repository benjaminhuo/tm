version: 2
jobs:
  auth:
    docker:
    - image: google/cloud-sdk
    steps:
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run: |
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - persist_to_workspace:
          root: ${KUBECONFIG}

  build:
    working_directory: /go/src/github.com/triggermesh/tm
    docker:
      - image: circleci/golang
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache
      - attach_workspace:
          at: ${HOME}/.kube
      - run:
          name: Run unit tests
          command: |
            go test | tee ${HOME}/go-test.out
      - store_test_results:
          path: ${HOME}/go-test.out
      - save_cache:
          key: v1-pkg-cache
          paths:
            - "/go/pkg"
      - run:
          name: Build binary
          command: |
            go build

  release:
    docker:
      - image: circleci/golang
    steps:
      - attach_workspace:
          at: /tmp/artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$(/tmp/artifacts/tm --version | awk '{print $3}')
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} /tmp/artifacts/

workflows:
  version: 2
  main:
    jobs:
      - auth:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
      - build:
          requires:
            - auth
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
      - release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/